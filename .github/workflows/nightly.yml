# Copyright (c) 2025-present The Bitcoin Core developers
# Distributed under the MIT software license, see the accompanying
# file COPYING or https://opensource.org/license/mit.

name: nightly CI
on:
  schedule:
    - cron: '02 02 * * *'
  workflow_dispatch:

env:
  CI_FAILFAST_TEST_LEAVE_DANGLING: 1  # GHA does not care about dangling processes and setting this variable avoids killing the CI script itself on error
  CIRRUS_CACHE_HOST: http://127.0.0.1:12321/ # When using Cirrus Runners this host can be used as with the docker `gha` build cache type.
  REPO_USE_CIRRUS_RUNNERS: 'bitcoin/bitcoin' # Use cirrus runners and cache for this repo, instead of falling back to the slow GHA runners

defaults:
  run:
    shell: bash

jobs:
  runners:
    name: 'determine runners'
    runs-on: ubuntu-24.04
    outputs:
      use-cirrus-runners: ${{ steps.runners.outputs.use-cirrus-runners }}
    steps:
      - id: runners
        run: |
          if [[ "${REPO_USE_CIRRUS_RUNNERS}" == "${{ github.repository }}" ]]; then
            echo "use-cirrus-runners=true" >> "$GITHUB_OUTPUT"
            echo "::notice title=Runner Selection::Using Cirrus Runners"
          else
            echo "use-cirrus-runners=false" >> "$GITHUB_OUTPUT"
            echo "::notice title=Runner Selection::Using GitHub-hosted runners"
          fi

  nightly:
    needs: runners
    runs-on: ${{ needs.runners.outputs.use-cirrus-runners == 'true' && matrix.cirrus-runner || matrix.fallback-runner }}
    timeout-minutes: 300

    env:
      DANGER_CI_ON_HOST_FOLDERS: 1
      FILE_ENV: ${{ matrix.file-env }}

    strategy:
      fail-fast: false
      matrix:
        include:
          - name: 'Native Valgrind'
            cirrus-runner: 'ghcr.io/cirruslabs/ubuntu-runner-amd64:24.04-lg'
            fallback-runner: 'ubuntu-24.04'
            timeout-minutes: 300
            file-env: './ci/test/00_setup_env_native_valgrind.sh'

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure environment
        uses: ./.github/actions/configure-environment

      - name: Restore caches
        id: restore-cache
        uses: ./.github/actions/restore-caches

      - name: Configure Docker
        uses: ./.github/actions/configure-docker
        with:
          use-cirrus: ${{ needs.runners.outputs.use-cirrus-runners }}

      - name: CI script
        run: ./ci/test_run_all.sh

      - name: Save caches
        uses: ./.github/actions/save-caches
        with:
          depends-sources-cache-hit: ${{ steps.restore-cache.outputs.depends-sources-cache-hit }}
          depends-built-cache-hit: ${{ steps.restore-cache.outputs.depends-built-cache-hit }}
